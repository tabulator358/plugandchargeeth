/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    ChargerRegistry: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "ErrAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotChargerOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotRegistered",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          name: "ChargerActiveSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int32",
              name: "latE7",
              type: "int32",
            },
            {
              indexed: false,
              internalType: "int32",
              name: "lngE7",
              type: "int32",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "pricePerKWhMilliUSD",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "uint16",
              name: "powerKW",
              type: "uint16",
            },
          ],
          name: "ChargerRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "int32",
              name: "latE7",
              type: "int32",
            },
            {
              indexed: false,
              internalType: "int32",
              name: "lngE7",
              type: "int32",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "pricePerKWhMilliUSD",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "uint16",
              name: "powerKW",
              type: "uint16",
            },
          ],
          name: "ChargerUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
          ],
          name: "get",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "int32",
                  name: "latE7",
                  type: "int32",
                },
                {
                  internalType: "int32",
                  name: "lngE7",
                  type: "int32",
                },
                {
                  internalType: "uint32",
                  name: "pricePerKWhMilliUSD",
                  type: "uint32",
                },
                {
                  internalType: "uint16",
                  name: "powerKW",
                  type: "uint16",
                },
                {
                  internalType: "bool",
                  name: "active",
                  type: "bool",
                },
              ],
              internalType: "struct ChargerRegistry.Charger",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "getChargersByOwner",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pendingOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "int32",
              name: "latE7",
              type: "int32",
            },
            {
              internalType: "int32",
              name: "lngE7",
              type: "int32",
            },
            {
              internalType: "uint32",
              name: "pricePerKWhMilliUSD",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "powerKW",
              type: "uint16",
            },
          ],
          name: "registerCharger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          name: "setActive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "int32",
              name: "latE7",
              type: "int32",
            },
            {
              internalType: "int32",
              name: "lngE7",
              type: "int32",
            },
            {
              internalType: "uint32",
              name: "pricePerKWhMilliUSD",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "powerKW",
              type: "uint16",
            },
          ],
          name: "updateCharger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        owner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        pendingOwner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
      },
      deployedOnBlock: 5,
    },
    MockUSDC: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "decimals_",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "ECDSAInvalidSignature",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
          ],
          name: "ECDSAInvalidSignatureLength",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "ECDSAInvalidSignatureS",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
          ],
          name: "ERC2612ExpiredSignature",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "signer",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC2612InvalidSigner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "currentNonce",
              type: "uint256",
            },
          ],
          name: "InvalidAccountNonce",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "faucet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getFaucetUsed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "quickFaucet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        approve:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        decimals:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        name: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        totalSupply:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        transfer:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        DOMAIN_SEPARATOR:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        eip712Domain:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        nonces:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        permit:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 1,
    },
    PlugAndChargeCore: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_usdc",
              type: "address",
            },
            {
              internalType: "contract IVehicleRegistry",
              name: "_vehicleRegistry",
              type: "address",
            },
            {
              internalType: "contract IChargerRegistry",
              name: "_chargerRegistry",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_minDeposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxDeposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_refundTimeout",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AddressEmptyCode",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "AddressInsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "ECDSAInvalidSignature",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
          ],
          name: "ECDSAInvalidSignatureLength",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "ECDSAInvalidSignatureS",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrBadSignature",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrInsufficientReserve",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrInvalidCommitment",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotChargerOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotDriver",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotTrusted",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrOutOfBounds",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrTokenTransfer",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrTooSoon",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrWrongState",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedInnerCall",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "SafeERC20FailedOperation",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "ChargeProposed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "DepositAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "reasonHash",
              type: "bytes32",
            },
          ],
          name: "Disputed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "minDeposit",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "maxDeposit",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "refundTimeout",
              type: "uint256",
            },
          ],
          name: "ParamsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Refunded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "driver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "sponsor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialDeposit",
              type: "uint256",
            },
          ],
          name: "SessionCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "driverAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "chargerAmount",
              type: "uint256",
            },
          ],
          name: "Settled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "driver",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "trusted",
              type: "bool",
            },
          ],
          name: "TrustedChargerSet",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "addDeposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "chargerRegistry",
          outputs: [
            {
              internalType: "contract IChargerRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "sessionSalt",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "initialDeposit",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "sponsorOrZero",
              type: "address",
            },
            {
              internalType: "bool",
              name: "usePermit",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "v",
                  type: "uint8",
                },
                {
                  internalType: "bytes32",
                  name: "r",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "s",
                  type: "bytes32",
                },
              ],
              internalType: "struct PlugAndChargeCore.PermitData",
              name: "permit",
              type: "tuple",
            },
          ],
          name: "createSession",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "sessionSalt",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "payer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialDeposit",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "usePermit",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "v",
                  type: "uint8",
                },
                {
                  internalType: "bytes32",
                  name: "r",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "s",
                  type: "bytes32",
                },
              ],
              internalType: "struct PlugAndChargeCore.PermitData",
              name: "permit",
              type: "tuple",
            },
          ],
          name: "createSessionByCharger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "sessionSalt",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "payer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialDeposit",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "usePermit",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "v",
                  type: "uint8",
                },
                {
                  internalType: "bytes32",
                  name: "r",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "s",
                  type: "bytes32",
                },
              ],
              internalType: "struct PlugAndChargeCore.PermitData",
              name: "permit",
              type: "tuple",
            },
          ],
          name: "createSessionGuestByCharger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "reasonHash",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
          ],
          name: "dispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "domainSeparator",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amountC",
              type: "uint256",
            },
          ],
          name: "endAndPropose",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
          ],
          name: "escrowBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
          ],
          name: "finalizeIfNoDispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
          ],
          name: "getSession",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "driver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "sponsor",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "vehicleHash",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "chargerId",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "commitment",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "reserved",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "proposed",
                  type: "uint256",
                },
                {
                  internalType: "uint64",
                  name: "startTs",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "endTs",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "proposeTs",
                  type: "uint64",
                },
                {
                  internalType: "uint8",
                  name: "state",
                  type: "uint8",
                },
              ],
              internalType: "struct PlugAndChargeCore.Session",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDeposit",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minDeposit",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pendingOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
          ],
          name: "refundIfStale",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "refundTimeout",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "driverAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "chargerAmount",
              type: "uint256",
            },
          ],
          name: "resolveDispute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "driver",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "chargerId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "trusted",
              type: "bool",
            },
          ],
          name: "setTrustedCharger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "trustedChargers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "payer",
              type: "address",
            },
            {
              internalType: "bool",
              name: "usePermit",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "v",
                  type: "uint8",
                },
                {
                  internalType: "bytes32",
                  name: "r",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "s",
                  type: "bytes32",
                },
              ],
              internalType: "struct PlugAndChargeCore.PermitData",
              name: "permit",
              type: "tuple",
            },
          ],
          name: "trustedPullDeposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_minDeposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxDeposit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_refundTimeout",
              type: "uint256",
            },
          ],
          name: "updateParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "usdc",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "vehicleRegistry",
          outputs: [
            {
              internalType: "contract IVehicleRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 7,
    },
    VehicleRegistry: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "ErrAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrChipAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotDriver",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotRegistered",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "driver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "chipId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "iso15118Enabled",
              type: "bool",
            },
          ],
          name: "VehicleRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "driver",
              type: "address",
            },
          ],
          name: "VehicleUnregistered",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
          ],
          name: "getPublicKey",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "chipId",
              type: "bytes32",
            },
          ],
          name: "getVehicleByChip",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
          ],
          name: "isIso15118Enabled",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
          ],
          name: "ownerOfVehicle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pendingOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "chipId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "iso15118Enabled",
              type: "bool",
            },
            {
              internalType: "bytes32",
              name: "publicKeyHash",
              type: "bytes32",
            },
          ],
          name: "registerVehicle",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "vehicleHash",
              type: "bytes32",
            },
          ],
          name: "unregisterVehicle",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        owner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        pendingOwner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
      },
      deployedOnBlock: 3,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
